@InProceedings{merigoux2021catala,
author = {Merigoux, Denis and Chataing, Nicolas and Protzenko, Jonathan},
title = {Catala: A Programming Language for the Law},
booktitle = {ICFP 2021},
year = {2021},
month = {July},
abstract = {Law at large underpins modern society, codifying and governing many aspects of citizens' daily lives. Oftentimes, law is subject to interpretation, debate and challenges throughout various courts and jurisdictions. But in some other areas, law leaves little room for interpretation, and essentially aims to rigorously describe a computation, a decision procedure or, simply said, an algorithm. Unfortunately, prose remains a woefully inadequate tool for the job. The lack of formalism leaves room for ambiguities; the structure of legal statutes, with many paragraphs and sub-sections spread across multiple pages, makes it hard to compute the intended outcome of the algorithm underlying a given text; and, as with any other piece of poorly-specified critical software, the use of informal language leaves corner cases unaddressed. We introduce Catala, a new programming language that we specifically designed to allow a straightforward and systematic translation of statutory law into an executable implementation. Catala aims to bring together lawyers and programmers through a shared medium, which together they can understand, edit and evolve, bridging a gap that often results in dramatically incorrect implementations of the law. We have implemented a compiler for Catala, and have proven the correctness of its core compilation steps using the F* proof assistant. We evaluate Catala on several legal texts that are algorithms in disguise, notably section 121 of the US federal income tax and the byzantine French family benefits; in doing so, we uncover a bug in the official implementation. We observe as a consequence of the formalization process that using Catala enables rich interactions between lawyers and programmers, leading to a greater understanding of the original legislative intent, while producing a correct-by-construction executable specification reusable by the greater software ecosystem.},
url = {https://www.microsoft.com/en-us/research/publication/catala-a-programming-language-for-the-law/},
}

@article{logikey,
title = {LogiKEy workbench: Deontic logics, logic combinations and expressive ethical and legal reasoning (Isabelle/HOL dataset)},
journal = {Data in Brief},
volume = {33},
pages = {106409},
year = {2020},
issn = {2352-3409},
doi = {https://doi.org/10.1016/j.dib.2020.106409},
url = {https://www.sciencedirect.com/science/article/pii/S2352340920312919},
author = {Christoph Benzmüller and Ali Farjami and David Fuenmayor and Paul Meder and Xavier Parent and Alexander Steen and Leendert {van der Torre} and Valeria Zahoransky},
keywords = {Trustworthy and responsible AI, Knowledge representation and reasoning, Automated theorem proving, Model finding, Normative reasoning, Normative systems, Semantical embedding, Higher-order logic},
abstract = {The LogiKEy workbench and dataset for ethical and legal reasoning is presented. This workbench simultaneously supports development, experimentation, assessment and deployment of formal logics and ethical and legal theories at different conceptual layers. More concretely, it comprises, in form of a dataset (Isabelle/HOL theory files), formal encodings of multiple deontic logics, logic combinations, deontic paradoxes and normative theories in the higher-order proof assistant system Isabelle/HOL. The data were acquired through application of the LogiKEy methodology, which supports experimentation with different normative theories, in different application scenarios, and which is not tied to specific logics or logic combinations. Our workbench consolidates related research contributions of the authors and it may serve as a starting point for further studies and experiments in flexible and expressive ethical and legal reasoning. It may also support hands-on teaching of non-trivial logic formalisms in lecture courses and tutorials. The LogiKEy methodology and framework is discussed in more detail in the companion research article titled “Designing Normative Theories for Ethical and Legal Reasoning: LogiKEy Framework, Methodology, and Tool Support” [5].}
}

@INPROCEEDINGS{Symboleo,  author={Sharifi, Sepehr and Parvizimosaed, Alireza and
                  Amyot, Daniel and Logrippo, Luigi and Mylopoulos, John},
                  booktitle={2020 IEEE 28th International Requirements
                  Engineering Conference (RE)},   title={Symboleo: Towards a
                  Specification Language for Legal Contracts},   year={2020},
                  volume={},  number={},  pages={364-369},
                  doi={10.1109/RE48521.2020.00049}}

@inproceedings{libal_steen_nai_suite_draft_reason_legal_texts_jurix_2019,
  author    = {Tomer Libal and
               Alexander Steen},
  editor    = {Michal Araszkiewicz and
               V{\'{\i}}ctor Rodr{\'{\i}}guez{-}Doncel},
  title     = {The {NAI} Suite - Drafting and Reasoning over Legal Texts},
  booktitle = {Legal Knowledge and Information Systems - {JURIX} 2019: The Thirty-second
               Annual Conference, Madrid, Spain, December 11-13, 2019},
  series    = {Frontiers in Artificial Intelligence and Applications},
  volume    = 322,
  pages     = {243--246},
  publisher = {{IOS} Press},
  year      = 2019,
  url       = {https://doi.org/10.3233/FAIA190333},
  doi       = {10.3233/FAIA190333},
  timestamp = {Wed, 10 Feb 2021 22:02:18 +0100},
  biburl    = {https://dblp.org/rec/conf/jurix/LibalS19.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}
 @misc{smucclaw, title={Smucclaw/DSL: Domain specific languages for
                  Computational Law}, url={https://github.com/smucclaw/dsl/},
                  journal={GitHub}, publisher={SMU CCLAW}, author={Smucclaw}}
@InCollection{sep-logic-deontic,
	author       =	{McNamara, Paul and Van De Putte, Frederik},
	title        =	{{Deontic Logic}},
	booktitle    =	{The {Stanford} Encyclopedia of Philosophy},
	editor       =	{Edward N. Zalta},
	howpublished =	{\url{https://plato.stanford.edu/archives/spr2021/entries/logic-deontic/}},
	year         =	{2021},
	edition      =	{{S}pring 2021},
	publisher    =	{Metaphysics Research Lab, Stanford University}
}
@inproceedings{governatori1,
author = {Governatori, Guido},
title = {On the Relationship between Carneades and Defeasible Logic},
year = {2011},
isbn = {9781450307550},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2018358.2018362},
doi = {10.1145/2018358.2018362},
abstract = {We study the formal relationships between the inferential aspects of Carneades (a
general argumentation framework) and Defeasible Logic. The outcome of the investigation
is that the current proof standards proposed in the Carneades framework correspond
to some variants of Defeasible Logic.},
booktitle = {Proceedings of the 13th International Conference on Artificial Intelligence and Law},
pages = {31–40},
numpages = {10},
location = {Pittsburgh, Pennsylvania},
series = {ICAIL '11}
}
@InCollection{sep-reasoning-defeasible,
	author       =	{Koons, Robert},
	title        =	{{Defeasible Reasoning}},
	booktitle    =	{The {Stanford} Encyclopedia of Philosophy},
	editor       =	{Edward N. Zalta},
	howpublished =	{\url{https://plato.stanford.edu/archives/fall2021/entries/reasoning-defeasible/}},
	year         =	{2021},
	edition      =	{{F}all 2021},
	publisher    =	{Metaphysics Research Lab, Stanford University}
}
 @misc{singapore_management_university_2021, title={Home: Centre for
                  computational law: Singapore Management University},
                  url={https://cclaw.smu.edu.sg/}, journal={Home | Centre for
                  Computational Law | Singapore Management University},
                  author={Singapore Management University}, year={2021}}
@InCollection{sep-type-theory,
	author       =	{Coquand, Thierry},
	title        =	{{Type Theory}},
	booktitle    =	{The {Stanford} Encyclopedia of Philosophy},
	editor       =	{Edward N. Zalta},
	howpublished =	{\url{https://plato.stanford.edu/archives/fall2018/entries/type-theory/}},
	year         =	2018,
	edition      =	{{F}all 2018},
	publisher    =	{Metaphysics Research Lab, Stanford University}
}

@article{Governatori2021UnravelLR,
  title={Unravel legal references in defeasible deontic logic},
  author={Guido Governatori and Francesco Olivieri},
  journal={Proceedings of the Eighteenth International Conference on Artificial Intelligence and Law},
  year={2021}
}
 @misc{gmalecha_2015, title={GMALECHA/coq-temporal: An implementation of
                  temporal logic in COQ using charge!},
                  url={https://github.com/gmalecha/coq-temporal},
                  journal={GitHub}, author={Gmalecha}, year={2015}, month={Dec}}
 @misc{notbad4u_2019, title={NOTBAD4U/coqlang\_temporal\_logic: Formalization of
                  temporal logic in Coq},
                  url={https://github.com/NotBad4U/coqlang_temporal_logic},
                  journal={GitHub}, author={NotBad4U}, year=2019, month={Dec}}
@misc{schultz2017temporal,
      title={Temporal Type Theory: A topos-theoretic approach to systems and behavior},
      author={Patrick Schultz and David I. Spivak},
      year={2017},
      eprint={1710.10258},
      archivePrefix={arXiv},
      primaryClass={math.CT}
}
