
;; Function main (main, funcdef_no=0, decl_uid=1942, cgraph_uid=1, symbol_order=0) (executed once)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
starting the processing of deferred insns
ending the processing of deferred insns


main

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d} r6={1d,2u} r7={1d,2u} r16={1d,1u} r19={1d,2u} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r36={1d} r37={1d} 
;;    total ref usage 29{20d,9u,0e} in 2{2 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 2 10 2 (set (reg/i:SI 0 ax)
        (const_int 10 [0xa])) "test.c":8:1 75 {*movsi_internal}
     (nil))
(insn 10 9 0 2 (use (reg/i:SI 0 ax)) "test.c":8:1 -1
     (nil))
